<?xml version="1.0" encoding="UTF-8"?>
<syntax name="postcss">
    <meta>
        <name>PostCSS</name>
        <type>stylesheet</type>
        <preferred-file-extension>pcss</preferred-file-extension>
    </meta>
    
    <detectors>
        <extension priority="1.0">css,pcss</extension>
    </detectors>
    
    <identifiers>
        <characters>
            <alphanumeric />
            <string>-_</string>
        </characters>
        <prefixes>
            <string>#$</string>
        </prefixes>
    </identifiers>
    
    <comments>
        <multiline>
            <starts-with>
                <expression>/*</expression>
            </starts-with>
            <ends-with>
                <expression>*/</expression>
            </ends-with>
        </multiline>
        <single>
            <expression>//</expression>
        </single>
    </comments>
    
    <scopes>
        <include syntax="self" collection="comments" />
        <include syntax="self" collection="variable-definitions" />
        <include syntax="self" collection="at-rules" />
        <include syntax="self" collection="selectors" />
        <include syntax="self" collection="attributes" />
    </scopes>
    
    <collections>
        <!-- !Comments -->
        <collection name="comments">
            <scope name="postcss.comment.single" spell-check="true">
                <expression>\/\/(.*)$</expression>
            </scope>
            <scope name="postcss.comment.block" spell-check="true">
                <starts-with>
                    <expression>\/\*</expression>
                </starts-with>
                <ends-with>
                    <expression>\*\/</expression>
                </ends-with>
                <subscopes />
            </scope>
        </collection>
        
        <!-- At-Rules -->
        <collection name="at-rules" override="true">
            <!-- @use -->
            <scope name="postcss.style.at-rule.use">
                <symbol type="style-directive">
                    <context behavior="subtree" foldable="false" />
                </symbol>
                <starts-with>
                    <expression>(@use)\s+</expression>
                    <capture number="1" name="postcss.style.at-rule.include.at" />
                </starts-with>
                <ends-with />
                <subscopes anchored="true">
                    <include syntax="self" collection="comments" optional="true" />
                    
                    <include syntax="self" collection="strings" />
                    
                    <scope name="postcss.keyword" optional="true">
                        <expression>\b(with)\b</expression>
                    </scope>
                    
                    <scope name="postcss.use.arguments">
                        <starts-with>
                            <expression>\(</expression>
                            <capture number="0" name="postcss.bracket" />
                        </starts-with>
                        <ends-with>
                            <expression>\)</expression>
                            <capture number="0" name="postcss.bracket" />
                        </ends-with>
                        <subscopes>
                            <cut-off>
                                <expression>@(media|supports|document|page|font-face|include|mixin)\b</expression>
                            </cut-off>
                            <include syntax="self" collection="variable-definitions" />
                            <scope name="postcss.style.use.argument.separator">
                                <expression>,</expression>
                            </scope>
                        </subscopes>
                    </scope>
                </subscopes>
            </scope>
            
            <!-- @include -->
            <scope name="postcss.style.at-rule.include">
                <symbol type="style-directive">
                    <context behavior="subtree" foldable="false" />
                </symbol>
                <starts-with>
                    <expression>(@include)\s+([a-zA-Z_-][a-zA-ZÀ-ÖØ-öø-ÿŸřŘšŠžŽ0-9-_]*)?</expression>
                    <capture number="1" name="postcss.style.at-rule.include.at" />
                    <capture number="2" name="postcss.style.at-rule.include.function.identifier.name" />
                </starts-with>
                <ends-with>
                    <expression>(?&lt;=\})|;</expression>
                </ends-with>
                <subscopes>
                    <cut-off>
                        <expression>@(media|supports|document|page|font-face|include|mixin)\b</expression>
                    </cut-off>
                    
                    <include syntax="self" collection="comments" />
                    
                    <scope name="postcss.style.include.arguments">
                        <starts-with>
                            <expression>\(</expression>
                            <capture number="0" name="postcss.style.include.arguments.bracket" />
                        </starts-with>
                        <ends-with>
                            <expression>\)</expression>
                            <capture number="0" name="postcss.style.include.arguments.bracket" />
                        </ends-with>
                        <subscopes>
                            <include syntax="self" collection="values" />
                            <scope name="postcss.style.include.argument.separator">
                                <expression>,</expression>
                            </scope>
                        </subscopes>
                    </scope>
                    
                    <include syntax="self" collection="attribute-lists" />
                </subscopes>
            </scope>
            
            <!-- @mixin -->
            <scope name="postcss.style.at-rule.mixin">
                <symbol type="function">
                    <context behavior="subtree" foldable="false" />
                </symbol>
                <starts-with>
                    <expression>(@mixin)\s+([a-zA-Z_-][a-zA-ZÀ-ÖØ-öø-ÿŸřŘšŠžŽ0-9-_]*)?</expression>
                    <capture number="1" name="postcss.style.at-rule.mixin.at" />
                    <capture number="2" name="postcss.style.at-rule.mixin.function.identifier.name" />
                </starts-with>
                <ends-with />
                <subscopes anchored="true">
                    <include syntax="self" collection="comments" optional="true" repeat="true" />
                    
                    <scope name="postcss.style.mixin.arguments" optional="true">
                        <starts-with>
                            <expression>\(</expression>
                            <capture number="0" name="postcss.style.mixin.arguments.bracket" />
                        </starts-with>
                        <ends-with>
                            <expression>\)</expression>
                            <capture number="0" name="postcss.style.mixin.arguments.bracket" />
                        </ends-with>
                        <subscopes>
                            <scope name="postcss.style.mixin.argument">
                                <symbol type="argument" />
                                <starts-with>
                                    <expression>($(?:[a-zA-Z_-][a-zA-ZÀ-ÖØ-öø-ÿŸřŘšŠžŽ0-9-_]*))\s*(:)?</expression>
                                    <capture number="1" name="postcss.style.mixin.argument.identifier.variable.name" />
                                    <capture number="2" name="postcss.style.mixin.argument.colon" />
                                </starts-with>
                                <ends-with>
                                    <expression>(?=,|\))</expression>
                                </ends-with>
                                <subscopes>
                                    <include syntax="self" collection="values" />
                                </subscopes>
                            </scope>
                            <scope name="postcss.style.function.argument.identifier.variable.name">
                                <symbol type="argument" />
                                <expression>\$[a-zA-ZÀ-ÖØ-öø-ÿŸřŘšŠžŽ0-9-_]+</expression>
                            </scope>
                            <include syntax="self" collection="values" />
                            <scope name="postcss.style.mixin.argument.separator">
                                <expression>,</expression>
                            </scope>
                        </subscopes>
                    </scope>
                </subscopes>
            </scope>
            
            <!-- @function -->
            <scope name="postcss.style.at-rule.function">
                <symbol type="function">
                    <context behavior="subtree" foldable="false" />
                </symbol>
                <starts-with>
                    <expression>(@function)\s+([a-zA-Z_-][a-zA-ZÀ-ÖØ-öø-ÿŸřŘšŠžŽ0-9-_]*)?</expression>
                    <capture number="1" name="postcss.style.at-rule.function.at" />
                    <capture number="2" name="postcss.style.at-rule.function.identifier.name" />
                </starts-with>
                <ends-with />
                <subscopes anchored="true">
                    <include syntax="self" collection="comments" optional="true" repeat="true" />
                    
                    <scope name="postcss.style.function.arguments">
                        <starts-with>
                            <expression>\(</expression>
                            <capture number="0" name="postcss.style.function.arguments.bracket" />
                        </starts-with>
                        <ends-with>
                            <expression>\)</expression>
                            <capture number="0" name="postcss.style.function.arguments.bracket" />
                        </ends-with>
                        <subscopes>
                            <scope name="postcss.style.function.argument">
                                <symbol type="argument" />
                                <starts-with>
                                    <expression>($(?:[a-zA-Z_-][a-zA-ZÀ-ÖØ-öø-ÿŸřŘšŠžŽ0-9-_]*))\s*(:)?</expression>
                                    <capture number="1" name="postcss.style.function.argument.identifier.variable.name" />
                                    <capture number="2" name="postcss.style.function.argument.colon" />
                                </starts-with>
                                <ends-with>
                                    <expression>(?=,|\))</expression>
                                </ends-with>
                                <subscopes>
                                    <include syntax="self" collection="values" />
                                </subscopes>
                            </scope>
                            <scope name="postcss.style.function.argument.identifier.variable.name">
                                <symbol type="argument" />
                                <expression>\$[a-zA-ZÀ-ÖØ-öø-ÿŸřŘšŠžŽ0-9-_]+</expression>
                            </scope>
                            <include syntax="self" collection="values" />
                            <scope name="postcss.style.function.argument.separator">
                                <expression>,</expression>
                            </scope>
                        </subscopes>
                    </scope>
                </subscopes>
            </scope>
            
            <!-- @each -->
            <scope name="postcss.style.at-rule.each">
                <symbol type="style-directive">
                    <context behavior="subtree" foldable="false" />
                </symbol>
                <starts-with>
                    <expression>(@each)\s+</expression>
                    <capture number="1" name="postcss.style.at-rule.at" />
                </starts-with>
                <ends-with />
                <subscopes anchored="true">
                    <include syntax="self" collection="comments" optional="true" repeat="true" />
                    
                    <include syntax="self" collection="variables" optional="true" />
                    
                    <scope name="postcss.keyword" optional="true">
                        <expression>\b(in)\b</expression>
                    </scope>
                    
                    <include syntax="self" collection="variables" optional="true" />
                </subscopes>
            </scope>
            
            <!-- @for -->
            <scope name="postcss.style.at-rule.for">
                <symbol type="style-directive">
                    <context behavior="subtree" foldable="false" />
                </symbol>
                <starts-with>
                    <expression>(@for)\s+</expression>
                    <capture number="1" name="postcss.style.at-rule.at" />
                </starts-with>
                <ends-with />
                <subscopes anchored="true">
                    <include syntax="self" collection="comments" optional="true" repeat="true" />
                    
                    <include syntax="self" collection="variables" optional="true" />
                    
                    <scope name="postcss.keyword" optional="true">
                        <expression>\b(from)\b</expression>
                    </scope>
                    
                    <include syntax="self" collection="values" optional="true" />
                    
                    <scope name="postcss.keyword" optional="true">
                        <expression>\b(to)\b</expression>
                    </scope>
                    
                    <include syntax="self" collection="values" optional="true" />
                </subscopes>
            </scope>
            
            <!-- @while -->
            <scope name="postcss.style.at-rule.while">
                <symbol type="style-directive">
                    <context behavior="subtree" foldable="false" />
                </symbol>
                <starts-with>
                    <expression>(@while)\s+</expression>
                    <capture number="1" name="postcss.style.at-rule.at" />
                </starts-with>
                <ends-with />
                <subscopes anchored="true">
                    <include syntax="self" collection="comments" optional="true" repeat="true" />
                    
                    <include syntax="self" collection="conditional-expressions" optional="true" />
                </subscopes>
            </scope>
            
            <!-- @if -->
            <scope name="postcss.style.at-rule.if">
                <symbol type="style-directive">
                    <context behavior="subtree" foldable="false" />
                </symbol>
                <starts-with>
                    <expression>(@if)\s+</expression>
                    <capture number="1" name="postcss.style.at-rule.at" />
                </starts-with>
                <ends-with />
                <subscopes anchored="true">
                    <include syntax="self" collection="comments" optional="true" repeat="true" />
                    
                    <include syntax="self" collection="conditional-expressions" optional="true" repeat="true" />
                </subscopes>
            </scope>
            
            <!-- @else if -->
            <scope name="postcss.style.at-rule.elseif">
                <symbol type="style-directive">
                    <context behavior="subtree" foldable="false" />
                </symbol>
                <starts-with>
                    <expression>(@else\sif)\s+</expression>
                    <capture number="1" name="postcss.style.at-rule.at" />
                </starts-with>
                <ends-with />
                <subscopes anchored="true">
                    <include syntax="self" collection="comments" optional="true" repeat="true" />
                    
                    <include syntax="self" collection="conditional-expressions" optional="true" repeat="true" />
                </subscopes>
            </scope>
            
            <!-- @else -->
            <scope name="postcss.style.at-rule.else">
                <symbol type="style-directive">
                    <context behavior="subtree" foldable="false" />
                </symbol>
                <starts-with>
                    <expression>(@else)\s+</expression>
                    <capture number="1" name="postcss.style.at-rule.at" />
                </starts-with>
                <ends-with />
                <subscopes anchored="true">
                    <include syntax="self" collection="comments" optional="true" repeat="true" />
                </subscopes>
            </scope>
            
            <!-- Other Directives -->
            <scope name="postcss.style.at-rule">
                <symbol type="style-directive">
                    <context behavior="subtree" foldable="false" />
                </symbol>
                <starts-with>
                    <expression>@(return|error|warn|debug|forward|content|function|extend|at-root|if|else|for|while)\b</expression>
                    <capture number="0" name="postcss.style.at-rule.at" />
                </starts-with>
                <ends-with />
                <subscopes anchored="true">
                    <include syntax="self" collection="comments" optional="true" repeat="true" />
                    <include syntax="self" collection="values" optional="true" repeat="true" />
                </subscopes>
            </scope>
        </collection>
        
        <!-- Selectors -->
        <collection name="selectors" override="true">
            <scope name="postcss.style.selector">
                <symbol type="style-ruleset">
                    <context behavior="whitespace" />
                </symbol>
                <starts-with>
                    <expression>(?![a-zA-Z_-][a-zA-Z0-9_-]*\s*:\s)(?=[&amp;+&gt;~:.*\#a-zA-Z\\\[])</expression>
                </starts-with>
                <ends-with>
                    <expression>$</expression>
                </ends-with>
                <subscopes>
                    <include syntax="self" collection="selector-components" />
                </subscopes>
            </scope>
        </collection>
        
        <!-- Selector Components -->
        <collection name="selector-components">
            <include syntax="self" collection="comments" />
            <include syntax="self" collection="interpolations" />
            <include syntax="self" collection="pseudoelements" />
            <include syntax="self" collection="simple-selectors" />
            <scope name="postcss.style.selector.operator">
                <expression>&amp;|\+|&gt;|~</expression>
            </scope>
            <scope name="postcss.style.selector.separator">
                <expression>,</expression>
            </scope>
        </collection>
        
        <collection name="pseudoelements">
            <!-- !Pseudoclasses with arguments -->
            <scope name="postcss.style.selector.pseudoclass.dir">
                <starts-with>
                    <expression>(:dir)(\()</expression>
                    <capture number="1" name="postcss.style.selector.pseudoclass.dir" />
                    <capture number="2" name="postcss.style.selector.bracket" />
                </starts-with>
                <ends-with>
                    <expression>\)</expression>
                    <capture number="0" name="postcss.style.selector.bracket" />
                </ends-with>
                <subscopes>
                    <scope name="postcss.style.selector.pseudoclass.dir.keyword">
                        <expression>ltr|rtl</expression>
                    </scope>
                </subscopes>
            </scope>
            <scope name="postcss.style.selector.pseudoclass.lang">
                <starts-with>
                    <expression>(:lang)(\()</expression>
                    <capture number="1" name="postcss.style.selector.pseudoclass.lang" />
                    <capture number="2" name="postcss.style.selector.bracket" />
                </starts-with>
                <ends-with>
                    <expression>\)</expression>
                    <capture number="0" name="postcss.style.selector.bracket" />
                </ends-with>
                <subscopes>
                    <include syntax="self" collection="comments" />
                    <scope name="postcss.style.selector.pseudoclass.lang.identifier">
                        <expression>[a-zA-Z-_][A-Za-zÀ-ÖØ-öø-ÿŸřŘšŠžŽ0-9-_]*</expression>
                    </scope>
                </subscopes>
            </scope>
            <scope name="postcss.style.selector.pseudoclass.not">
                <starts-with>
                    <expression>(:not)(\()</expression>
                    <capture number="1" name="postcss.style.selector.pseudoclass.not" />
                    <capture number="2" name="postcss.style.selector.bracket" />
                </starts-with>
                <ends-with>
                    <expression>\)</expression>
                    <capture number="0" name="postcss.style.selector.bracket" />
                </ends-with>
                <subscopes>
                    <include syntax="self" collection="comments" />
                    <include syntax="self" collection="simple-selectors" />
                </subscopes>
            </scope>
            <scope name="postcss.style.selector.pseudoclass.nth">
                <starts-with>
                    <expression>(:nth-(?:child|last-child|last-of-type|of-type))(\()</expression>
                    <capture number="1" name="postcss.style.selector.pseudoclass.nth" />
                    <capture number="2" name="postcss.style.selector.bracket" />
                </starts-with>
                <ends-with>
                    <expression>\)</expression>
                    <capture number="0" name="postcss.style.selector.bracket" />
                </ends-with>
                <subscopes>
                    <include syntax="self" collection="comments" />
                    <scope name="postcss.style.selector.pseudoclass.nth">
                        <strings>
                            <string>even</string>
                            <string>odd</string>
                        </strings>
                    </scope>
                    <scope name="postcss.style.selector.pseudoclass.nth.value.number">
                        <expression>(?:-?\d+n(?:\+\d+)?)|\d+</expression>
                    </scope>
                </subscopes>
            </scope>
            
            <!-- !Pseudoclasses without arguments -->
            <scope name="postcss.style.selector.pseudoclass">
                <strings prefix=":" suffix="\b" word-boundary="false">
                    <string>active</string>
                    <string>any-link</string>
                    <string>blank</string>
                    <string>checked</string>
                    <string>default</string>
                    <string>defined</string>
                    <string>disabled</string>
                    <string>empty</string>
                    <string>enabled</string>
                    <string>first</string>
                    <string>first-child</string>
                    <string>first-of-type</string>
                    <string>fullscreen</string>
                    <string>focus</string>
                    <string>focus-visible</string>
                    <string>focus-within</string>
                    <string>host</string>
                    <string>hover</string>
                    <string>indeterminate</string>
                    <string>in-range</string>
                    <string>invalid</string>
                    <string>last-child</string>
                    <string>last-of-type</string>
                    <string>left</string>
                    <string>link</string>
                    <string>not</string>
                    <string>nth-child</string>
                    <string>nth-last-child</string>
                    <string>nth-last-of-type</string>
                    <string>nth-of-type</string>
                    <string>only-child</string>
                    <string>only-of-type</string>
                    <string>optional</string>
                    <string>out-of-range</string>
                    <string>placeholder-shown</string>
                    <string>read-only</string>
                    <string>read-write</string>
                    <string>required</string>
                    <string>right</string>
                    <string>root</string>
                    <string>scope</string>
                    <string>state</string>
                    <string>target</string>
                    <string>valid</string>
                    <string>visited</string>
                    <string>where</string>
                </strings>
            </scope>
            
            <!-- !Pseudoelements -->
            <scope name="postcss.style.selector.pseudoelement">
                <strings prefix="(::)" suffix="\b" word-boundary="false">
                    <string>after</string>
                    <string>backdrop</string>
                    <string>before</string>
                    <string>cue</string>
                    <string>cue-region</string>
                    <string>first-letter</string>
                    <string>first-line</string>
                    <string>grammar-error</string>
                    <string>marker</string>
                    <string>part</string>
                    <string>placeholder</string>
                    <string>selection</string>
                    <string>slotted</string>
                    <string>spelling-error</string>
                </strings>
            </scope>
            <scope name="postcss.style.selector.pseudoelement.css2">
                <strings prefix="(:)" suffix="\b" word-boundary="false">
                    <string>after</string>
                    <string>before</string>
                    <string>first-letter</string>
                    <string>first-line</string>
                </strings>
            </scope>
            
            <scope name="postcss.style.selector.unknown">
                <expression>:[a-zA-Z0-9_-]*</expression>
            </scope>
            
            <!-- !Selector Attributes -->
            <scope name="postcss.style.selector.attribute-selector-list">
                <starts-with>
                    <expression>\[</expression>
                    <capture number="0" name="postcss.style.selector.attribute-selector-list.bracket" />
                </starts-with>
                <ends-with>
                    <expression>\]</expression>
                    <capture number="0" name="postcss.style.selector.attribute-selector-list.bracket" />
                </ends-with>
                <subscopes>
                    <cut-off>
                        <expression>(?=\{)</expression>
                    </cut-off>
                    <scope name="postcss.style.selector.attribute-selector">
                        <starts-with>
                            <expression>(-*[a-zA-Z_][A-Za-zÀ-ÖØ-öø-ÿŸřŘšŠžŽ0-9-_]*)(=|~=|\=)</expression>
                            <capture number="1" name="postcss.tag.attribute.name" />
                            <capture number="2" name="postcss.style.operator" />
                        </starts-with>
                        <ends-with>
                            <expression>(?=,|\])</expression>
                        </ends-with>
                        <subscopes>
                            <cut-off>
                                <expression>(?=\{|\()</expression>
                            </cut-off>
                            <include syntax="self" collection="comments" />
                            <include syntax="self" collection="values" />
                        </subscopes>
                    </scope>
                    <scope name="postcss.style.selector.attribute.single">
                        <expression>-*[a-zA-Z_][A-Za-zÀ-ÖØ-öø-ÿŸřŘšŠžŽ0-9-_]*</expression>
                        <capture number="0" name="postcss.tag.attribute.name" />
                    </scope>
                    <scope name="postcss.style.selector.separator">
                        <expression>,</expression>
                    </scope>
                </subscopes>
            </scope>
        </collection>
        
        <!-- !Simple Selectors -->
        <collection name="simple-selectors">
            <scope name="postcss.style.selector.simple.class">
                <symbol type="style-class" />
                <expression>(\.)([a-zA-Z_-](?:[A-Za-zÀ-ÖØ-öø-ÿŸřŘšŠžŽ0-9-_]|\\.)*)</expression>
                <capture number="1" name="postcss.style.selector.operator" />
                <capture number="2" name="postcss.style.selector.identifier.name.class" />
            </scope>
            <scope name="postcss.style.selector.simple.id">
                <symbol type="style-id" />
                <expression>(\#)([a-zA-Z_-](?:[A-Za-zÀ-ÖØ-öø-ÿŸřŘšŠžŽ0-9-_]|\\.)*)</expression>
                <capture number="1" name="postcss.style.selector.operator" />
                <capture number="2" name="postcss.style.selector.identifier.name.id" />
            </scope>
            <scope name="postcss.style.selector.simple.global">
                <expression>\*</expression>
                <capture number="0" name="postcss.style.selector.global.operator" />
            </scope>
            <include syntax="self" collection="elements" />
            <scope name="postcss.style.selector.simple.unknown">
                <expression>[a-zA-Z_-][A-Za-zÀ-ÖØ-öø-ÿŸřŘšŠžŽ0-9-_]*\b(?!\s*:)</expression>
            </scope>
        </collection>
        
        <!-- !Strings -->
        <collection name="strings">
            <scope name="postcss.style.string.double-quoted">
                <starts-with>
                    <expression>&quot;</expression>
                    <capture number="0" name="postcss.style.string.double-quoted.delimiter.left" />
                </starts-with>
                <ends-with>
                    <expression>&quot;|(?:(?&lt;!\\)$)</expression>
                    <capture number="0" name="postcss.style.string.double-quoted.delimiter.right" />
                </ends-with>
                <subscopes>
                    <scope name="postcss.style.string.double-quoted.escape">
                        <expression>\\(?:\\|&quot;|n|r|t|b|f)</expression>
                    </scope>
                </subscopes>
            </scope>
            <scope name="postcss.style.string.single-quoted">
                <starts-with>
                    <expression>&apos;</expression>
                    <capture number="0" name="postcss.style.string.single-quoted.delimiter.left" />
                </starts-with>
                <ends-with>
                    <expression>&apos;|(?:(?&lt;!\\)$)</expression>
                    <capture number="0" name="postcss.style.string.single-quoted.delimiter.right" />
                </ends-with>
                <subscopes>
                    <scope name="postcss.style.string.single-quoted.escape">
                        <expression>\\(?:\\|&apos;|n|r|t|b|f)</expression>
                    </scope>
                </subscopes>
            </scope>
        </collection>
        
        <!-- Values -->
        <collection name="values">
            <scope name="postcss.style.expression">
                <starts-with>
                    <expression>\#\{</expression>
                    <capture number="0" name="postcss.style.expression.bracket" />
                </starts-with>
                <ends-with>
                    <expression>\}</expression>
                    <capture number="0" name="postcss.style.expression.bracket" />
                </ends-with>
                <subscopes>
                    <include syntax="self" collection="values" />
                </subscopes>
            </scope>
            <scope name="postcss.style.identifier.variable">
                <expression>\$[a-zA-ZÀ-ÖØ-öø-ÿŸřŘšŠžŽ0-9-_]+</expression>
            </scope>
            
            <!-- !Strings -->
            <include syntax="self" collection="strings" />
            
            <!-- !Colors -->
            <scope name="postcss.style.value.color.named">
                <symbol type="color" />
                <strings case-insensitive="true">
                    <string>aliceblue</string>
                    <string>antiquewhite</string>
                    <string>aqua</string>
                    <string>aquamarine</string>
                    <string>azure</string>
                    <string>beige</string>
                    <string>bisque</string>
                    <string>black</string>
                    <string>blanchedalmond</string>
                    <string>blue</string>
                    <string>blueviolet</string>
                    <string>brown</string>
                    <string>burlywood</string>
                    <string>cadetblue</string>
                    <string>chartreuse</string>
                    <string>chocolate</string>
                    <string>coral</string>
                    <string>cornflowerblue</string>
                    <string>cornsilk</string>
                    <string>crimson</string>
                    <string>cyan</string>
                    <string>darkblue</string>
                    <string>darkcyan</string>
                    <string>darkgoldenrod</string>
                    <string>darkgray</string>
                    <string>darkgreen</string>
                    <string>darkgrey</string>
                    <string>darkkhaki</string>
                    <string>darkmagenta</string>
                    <string>darkolivegreen</string>
                    <string>darkorange</string>
                    <string>darkorchid</string>
                    <string>darkred</string>
                    <string>darksalmon</string>
                    <string>darkseagreen</string>
                    <string>darkslateblue</string>
                    <string>darkslategray</string>
                    <string>darkslategrey</string>
                    <string>darkturquoise</string>
                    <string>darkviolet</string>
                    <string>deeppink</string>
                    <string>deepskyblue</string>
                    <string>dimgray</string>
                    <string>dimgrey</string>
                    <string>dodgerblue</string>
                    <string>firebrick</string>
                    <string>floralwhite</string>
                    <string>forestgreen</string>
                    <string>fuchsia</string>
                    <string>gainsboro</string>
                    <string>ghostwhite</string>
                    <string>gold</string>
                    <string>goldenrod</string>
                    <string>gray</string>
                    <string>green</string>
                    <string>greenyellow</string>
                    <string>grey</string>
                    <string>honeydew</string>
                    <string>hotpink</string>
                    <string>indianred</string>
                    <string>indigo</string>
                    <string>ivory</string>
                    <string>khaki</string>
                    <string>lavender</string>
                    <string>lavenderblush</string>
                    <string>lawngreen</string>
                    <string>lemonchiffon</string>
                    <string>lightblue</string>
                    <string>lightcoral</string>
                    <string>lightcyan</string>
                    <string>lightgoldenrodyellow</string>
                    <string>lightgray</string>
                    <string>lightgreen</string>
                    <string>lightgrey</string>
                    <string>lightpink</string>
                    <string>lightsalmon</string>
                    <string>lightseagreen</string>
                    <string>lightskyblue</string>
                    <string>lightslategray</string>
                    <string>lightslategrey</string>
                    <string>lightsteelblue</string>
                    <string>lightyellow</string>
                    <string>lime</string>
                    <string>limegreen</string>
                    <string>linen</string>
                    <string>magenta</string>
                    <string>maroon</string>
                    <string>mediumaquamarine</string>
                    <string>mediumblue</string>
                    <string>mediumorchid</string>
                    <string>mediumpurple</string>
                    <string>mediumseagreen</string>
                    <string>mediumslateblue</string>
                    <string>mediumspringgreen</string>
                    <string>mediumturquoise</string>
                    <string>mediumvioletred</string>
                    <string>midnightblue</string>
                    <string>mintcream</string>
                    <string>mistyrose</string>
                    <string>moccasin</string>
                    <string>navajowhite</string>
                    <string>navy</string>
                    <string>oldlace</string>
                    <string>olive</string>
                    <string>olivedrab</string>
                    <string>orange</string>
                    <string>orangered</string>
                    <string>orchid</string>
                    <string>palegoldenrod</string>
                    <string>palegreen</string>
                    <string>paleturquoise</string>
                    <string>palevioletred</string>
                    <string>papayawhip</string>
                    <string>peachpuff</string>
                    <string>peru</string>
                    <string>pink</string>
                    <string>plum</string>
                    <string>powderblue</string>
                    <string>purple</string>
                    <string>rebeccapurple</string>
                    <string>red</string>
                    <string>rosybrown</string>
                    <string>royalblue</string>
                    <string>saddlebrown</string>
                    <string>salmon</string>
                    <string>sandybrown</string>
                    <string>seagreen</string>
                    <string>seashell</string>
                    <string>sienna</string>
                    <string>silver</string>
                    <string>skyblue</string>
                    <string>slateblue</string>
                    <string>slategray</string>
                    <string>slategrey</string>
                    <string>snow</string>
                    <string>springgreen</string>
                    <string>steelblue</string>
                    <string>tan</string>
                    <string>teal</string>
                    <string>thistle</string>
                    <string>tomato</string>
                    <string>transparent</string>
                    <string>turquoise</string>
                    <string>violet</string>
                    <string>wheat</string>
                    <string>white</string>
                    <string>whitesmoke</string>
                    <string>yellow</string>
                    <string>yellowgreen</string>
                </strings>
            </scope>
            <scope name="postcss.style.value.color.named.deprecated">
                <strings case-insensitive="true">
                    <string>ActiveBorder</string>
                    <string>ActiveCaption</string>
                    <string>AppWorkspace</string>
                    <string>Background</string>
                    <string>ButtonFace</string>
                    <string>ButtonHighlight</string>
                    <string>ButtonShadow</string>
                    <string>ButtonText</string>
                    <string>CaptionText</string>
                    <string>GrayText</string>
                    <string>Highlight</string>
                    <string>HighlightText</string>
                    <string>InactiveBorder</string>
                    <string>InactiveCaption</string>
                    <string>InactiveCaptionText</string>
                    <string>InfoBackground</string>
                    <string>InfoText</string>
                    <string>Menu</string>
                    <string>MenuText</string>
                    <string>Scrollbar</string>
                    <string>ThreeDDarkShadow</string>
                    <string>ThreeDFace</string>
                    <string>ThreeDHighlight</string>
                    <string>ThreeDLightShadow</string>
                    <string>ThreeDShadow</string>
                    <string>Window</string>
                    <string>WindowFrame</string>
                    <string>WindowText</string>
                </strings>
            </scope>
            <scope name="postcss.style.value.color.hsla">
                <symbol type="color" />
                <expression>\b(hsla)(\()\s*([0-9]{1,3})\s*\,\s*([0-9]*\.?[0-9]+%)\s*,\s*([0-9]*\.?[0-9]+%)\s*,\s*([0-9]*\.?[0-9]+)\s*(\))</expression>
                <capture number="1" name="postcss.style.value.color.hsla.identifier.function" />
                <capture number="2" name="postcss.style.value.color.hsla.bracket" />
                <capture number="3" name="postcss.style.value.color.hsla.number.hue" />
                <capture number="4" name="postcss.style.value.color.hsla.number.saturation" />
                <capture number="5" name="postcss.style.value.color.hsla.number.brightness" />
                <capture number="6" name="postcss.style.value.color.hsla.number.alpha" />
                <capture number="7" name="postcss.style.value.color.hsla.bracket" />
            </scope>
            <scope name="postcss.style.value.color.hsl">
                <symbol type="color" />
                <expression>\b(hsl)(\()\s*([0-9]{1,3})\s*\,\s*([0-9]*\.?[0-9]+%)\s*,\s*([0-9]*\.?[0-9]+%)\s*(\))</expression>
                <capture number="1" name="postcss.style.value.color.hsl.identifier.function" />
                <capture number="2" name="postcss.style.value.color.hsl.bracket" />
                <capture number="3" name="postcss.style.value.color.hsl.number.hue" />
                <capture number="4" name="postcss.style.value.color.hsl.number.saturation" />
                <capture number="5" name="postcss.style.value.color.hsl.number.brightness" />
                <capture number="6" name="postcss.style.value.color.hsl.bracket" />
            </scope>
            <scope name="postcss.style.value.color.rgba">
                <symbol type="color" />
                <expression>\b(rgba)(\()\s*([0-9]{1,3})\s*\,\s*([0-9]{1,3})\s*,\s*([0-9]{1,3})\s*,\s*([0-9]*\.?[0-9]+)\s*(\))</expression>
                <capture number="1" name="postcss.style.value.color.rgba.identifier.function" />
                <capture number="2" name="postcss.style.value.color.rgba.bracket" />
                <capture number="3" name="postcss.style.value.color.rgba.number.red" />
                <capture number="4" name="postcss.style.value.color.rgba.number.green" />
                <capture number="5" name="postcss.style.value.color.rgba.number.blue" />
                <capture number="6" name="postcss.style.value.color.rgba.number.alpha" />
                <capture number="7" name="postcss.style.value.color.rgba.bracket" />
            </scope>
            <scope name="postcss.style.value.color.rgb">
                <symbol type="color" />
                <expression>\b(rgb)(\()\s*([0-9]{1,3})\s*\,\s*([0-9]{1,3})\s*,\s*([0-9]{1,3})\s*(\))</expression>
                <capture number="1" name="postcss.style.value.color.rgb.identifier.function" />
                <capture number="2" name="postcss.style.value.color.rgb.bracket" />
                <capture number="3" name="postcss.style.value.color.rgb.number.red" />
                <capture number="4" name="postcss.style.value.color.rgb.number.green" />
                <capture number="5" name="postcss.style.value.color.rgb.number.blue" />
                <capture number="6" name="postcss.style.value.color.rgb.bracket" />
            </scope>
            <scope name="postcss.style.value.color.display-p3">
                <symbol type="color" />
                <expression>\b(color)(\()\s*(display-p3)\s+([0-9]*\.?[0-9]+)\s+([0-9]*\.?[0-9]+)\s+([0-9]*\.?[0-9]+)\s*(?:(/)\s*([0-9]*\.?[0-9]+)\s*)?(\))</expression>
                <capture number="1" name="postcss.style.value.color.display-p3.identifier.function" />
                <capture number="2" name="postcss.style.value.color.display-p3.bracket" />
                <capture number="3" name="postcss.style.value.color.display-p3.keyword" />
                <capture number="4" name="postcss.style.value.color.display-p3.number.red" />
                <capture number="5" name="postcss.style.value.color.display-p3.number.green" />
                <capture number="6" name="postcss.style.value.color.display-p3.number.blue" />
                <capture number="7" name="postcss.style.value.color.display-p3.operator" />
                <capture number="8" name="postcss.style.value.color.display-p3.number.alpha" />
                <capture number="9" name="postcss.style.value.color.display-p3.bracket" />
            </scope>
            <scope name="postcss.style.value.color.srgb">
                <symbol type="color" />
                <expression>\b(color)(\()\s*(srgb)\s+([0-9]*\.?[0-9]+)\s+([0-9]*\.?[0-9]+)\s+([0-9]*\.?[0-9]+)\s*(?:(/)\s*([0-9]*\.?[0-9]+)\s*)?(\))</expression>
                <capture number="1" name="postcss.style.value.color.display-p3.identifier.function" />
                <capture number="2" name="postcss.style.value.color.display-p3.bracket" />
                <capture number="3" name="postcss.style.value.color.display-p3.keyword" />
                <capture number="4" name="postcss.style.value.color.display-p3.number.red" />
                <capture number="5" name="postcss.style.value.color.display-p3.number.green" />
                <capture number="6" name="postcss.style.value.color.display-p3.number.blue" />
                <capture number="7" name="postcss.style.value.color.display-p3.operator" />
                <capture number="8" name="postcss.style.value.color.display-p3.number.alpha" />
                <capture number="9" name="postcss.style.value.color.display-p3.bracket" />
            </scope>
            <scope name="postcss.style.value.color.hex">
                <symbol type="color" />
                <expression>(?:\#[a-fA-F0-9]{8})|(?:\#[a-fA-F0-9]{6})|(?:\#[a-fA-F0-9]{4})|(?:\#[a-fA-F0-9]{3})</expression>
            </scope>
            
            <!-- !Functions -->
            <scope name="postcss.style.value.function.var">
                <starts-with>
                    <expression>\b(var)(\()</expression>
                    <capture number="1" name="postcss.style.value.identifier.function" />
                    <capture number="2" name="postcss.style.value.function.var.bracket" />
                </starts-with>
                <ends-with>
                    <expression>(\))|$</expression>
                    <capture number="1" name="postcss.style.value.function.var.bracket" />
                </ends-with>
                <subscopes>
                    <scope name="postcss.style.value.property.identifier">
                        <expression>([A-Za-zÀ-ÖØ-öø-ÿŸřŘšŠžŽ0-9-_]+)</expression>
                    </scope>
                </subscopes>
            </scope>
            <scope name="postcss.style.value.function.url">
                <starts-with>
                    <expression>\b(url)(\()</expression>
                    <capture number="1" name="postcss.style.value.identifier.function" />
                    <capture number="2" name="postcss.style.value.function.bracket" />
                </starts-with>
                <ends-with>
                    <expression>(\))|$</expression>
                    <capture number="1" name="postcss.style.value.function.bracket" />
                </ends-with>
                <subscopes>
                    <scope name="postcss.style.string.double-quoted">
                        <starts-with>
                            <expression>&quot;</expression>
                            <capture number="0" name="postcss.style.string.double-quoted.path.delimiter.left" />
                        </starts-with>
                        <ends-with>
                            <expression>&quot;|(?:(?&lt;!\\)$)</expression>
                            <capture number="0" name="postcss.style.string.double-quoted.path.delimiter.right" />
                        </ends-with>
                        <subscopes>
                            <scope name="postcss.style.string.double-quoted.path.escape">
                                <expression>\\(?:\\|&quot;|n|r|t|b|f)</expression>
                            </scope>
                            <scope name="postcss.style.string.double-quoted.path">
                                <expression>(?:[^&quot;\\]|\\.)*</expression>
                            </scope>
                        </subscopes>
                    </scope>
                    <scope name="postcss.style.string.single-quoted">
                        <starts-with>
                            <expression>&apos;</expression>
                            <capture number="0" name="postcss.style.string.single-quoted.path.delimiter.left" />
                        </starts-with>
                        <ends-with>
                            <expression>(&apos;)|(?:(?&lt;!\\)$)</expression>
                            <capture number="0" name="postcss.style.string.single-quoted.path.delimiter.right" />
                        </ends-with>
                        <subscopes>
                            <scope name="postcss.style.string.single-quoted.path.escape">
                                <expression>\\(?:\\|&apos;|n|r|t|b|f)</expression>
                            </scope>
                            <scope name="postcss.style.string.single-quoted.path">
                                <expression>(?:[^&apos;\\]|\\.)+</expression>
                            </scope>
                        </subscopes>
                    </scope>
                    <scope name="postcss.style.string.url-value.path">
                        <expression>[^\)&apos;&quot;]+</expression>
                    </scope>
                </subscopes>
            </scope>
            <scope name="postcss.style.value.function">
                <starts-with>
                    <expression>\b([a-zA-Z-][A-Za-zÀ-ÖØ-öø-ÿŸřŘšŠžŽ0-9-_]*)(\()</expression>
                    <capture number="1" name="postcss.style.value.identifier.function" />
                    <capture number="2" name="postcss.style.value.function.bracket" />
                </starts-with>
                <ends-with>
                    <expression>(\))</expression>
                    <capture number="1" name="postcss.style.value.function.bracket" />
                </ends-with>
                <subscopes>
                    <include syntax="self" collection="comments" />
                    <include syntax="self" collection="values" />
                </subscopes>
            </scope>
            
            <!-- !Numbers -->
            <scope name="postcss.style.value.number">
                <expression>\b(\-?[0-9]*\.?[0-9]+)(ch|cm|deg|dpcm|dpi|dppx|em|ex|fr|grad|Hz|in|kHz|mm|ms|pc|pt|px|Q|rad|rem|s|turn|vh|vmax|vmin|vw|x|%)?</expression>
                <capture number="2" name="postcss.style.value.number.unit" />
            </scope>
            
            <!-- !Keywords -->
            <scope name="postcss.style.value.keyword.important">
                <expression>!important</expression>
            </scope>
            <scope name="postcss.style.value.keyword.function">
                <strings case-insensitive="true" prefixsuffix="(?=\()">
                    <string>annotation</string>
                    <string>blur</string>
                    <string>brightness</string>
                    <string>character-variant</string>
                    <string>circle</string>
                    <string>conic-gradient</string>
                    <string>contrast</string>
                    <string>cross-fade</string>
                    <string>cubic-bezier</string>
                    <string>drop-shadow</string>
                    <string>ellipse</string>
                    <string>grayscale</string>
                    <string>hsl</string>
                    <string>hsla</string>
                    <string>hue-rotate</string>
                    <string>image</string>
                    <string>image-set</string>
                    <string>invert</string>
                    <string>leader</string>
                    <string>linear-gradient</string>
                    <string>matrix</string>
                    <string>matrix3d</string>
                    <string>minmax</string>
                    <string>opacity</string>
                    <string>ornaments</string>
                    <string>paint</string>
                    <string>perspective</string>
                    <string>polygon</string>
                    <string>radial-gradient</string>
                    <string>ray</string>
                    <string>rect</string>
                    <string>repeating-linear-gradient</string>
                    <string>repeating-radial-gradient</string>
                    <string>rgb</string>
                    <string>rgba</string>
                    <string>rotate</string>
                    <string>rotate3d</string>
                    <string>rotateX</string>
                    <string>rotateY</string>
                    <string>rotateZ</string>
                    <string>saturate</string>
                    <string>scale</string>
                    <string>scale3d</string>
                    <string>scaleX</string>
                    <string>scaleY</string>
                    <string>scaleZ</string>
                    <string>sepia</string>
                    <string>skew</string>
                    <string>skewX</string>
                    <string>skewY</string>
                    <string>snapInterval</string>
                    <string>snapList</string>
                    <string>steps</string>
                    <string>styleset</string>
                    <string>stylistic</string>
                    <string>swash</string>
                    <string>symbols</string>
                    <string>target-counter</string>
                    <string>target-counters</string>
                    <string>target-text</string>
                    <string>translate</string>
                    <string>translate3d</string>
                    <string>translateX</string>
                    <string>translateY</string>
                    <string>translateZ</string>
                </strings>
            </scope>
            <scope name="postcss.style.value.keyword.vendor">
                <strings case-insensitive="true" suffix="\b" word-boundary="false">
                    <string>-moz-mac-unified-toolbar</string>
                    <string>-moz-win-borderless-glass</string>
                    <string>-moz-win-browsertabbar-toolbox</string>
                    <string>-moz-win-communications-toolbox</string>
                    <string>-moz-win-communicationstext</string>
                    <string>-moz-win-exclude-glass</string>
                    <string>-moz-win-glass</string>
                    <string>-moz-win-media-toolbox</string>
                    <string>-moz-win-mediatext</string>
                    <string>-moz-window-button-box</string>
                    <string>-moz-window-button-box-maximized</string>
                    <string>-moz-window-button-close</string>
                    <string>-moz-window-button-maximize</string>
                    <string>-moz-window-button-minimize</string>
                    <string>-moz-window-button-restore</string>
                    <string>-moz-window-frame-bottom</string>
                    <string>-moz-window-frame-left</string>
                    <string>-moz-window-frame-right</string>
                    <string>-moz-window-titlebar</string>
                    <string>-moz-window-titlebar-maximized</string>
                    <string>-ms-autohiding-scrollbar</string>
                    <string>-apple-pay-button</string>
                </strings>
            </scope>
            <scope name="postcss.style.value.keyword">
                <strings case-insensitive="true" suffix="(?!-)">
                    <string>above</string>
                    <string>absolute</string>
                    <string>add</string>
                    <string>after</string>
                    <string>alias</string>
                    <string>all</string>
                    <string>all-petite-caps</string>
                    <string>all-scroll</string>
                    <string>all-small-caps</string>
                    <string>allow-end</string>
                    <string>alpha</string>
                    <string>alternate</string>
                    <string>alternate-reverse</string>
                    <string>always</string>
                    <string>anywhere</string>
                    <string>auto</string>
                    <string>auto-flow</string>
                    <string>available</string>
                    <string>avoid</string>
                    <string>avoid-column</string>
                    <string>avoid-page</string>
                    <string>avoid-region</string>
                    <string>backwards</string>
                    <string>balance</string>
                    <string>balance-all</string>
                    <string>baseline</string>
                    <string>below</string>
                    <string>bidi-override</string>
                    <string>blink</string>
                    <string>block</string>
                    <string>block-axis</string>
                    <string>block-end</string>
                    <string>block-start</string>
                    <string>bold</string>
                    <string>bolder</string>
                    <string>border</string>
                    <string>border-box</string>
                    <string>both</string>
                    <string>bottom</string>
                    <string>break-all</string>
                    <string>break-spaces</string>
                    <string>break-word</string>
                    <string>bt</string>
                    <string>button</string>
                    <string>button-arrow-down</string>
                    <string>button-arrow-next</string>
                    <string>button-arrow-previous</string>
                    <string>button-arrow-up</string>
                    <string>button-bevel</string>
                    <string>button-focus</string>
                    <string>capitalize</string>
                    <string>caption</string>
                    <string>caret</string>
                    <string>cell</string>
                    <string>center</string>
                    <string>chained</string>
                    <string>checkbox</string>
                    <string>checkbox-container</string>
                    <string>checkbox-label</string>
                    <string>checkmenuitem</string>
                    <string>clear</string>
                    <string>clip</string>
                    <string>clone</string>
                    <string>close-quote</string>
                    <string>col-resize</string>
                    <string>collapse</string>
                    <string>color</string>
                    <string>color-burn</string>
                    <string>color-dodge</string>
                    <string>column</string>
                    <string>column-reverse</string>
                    <string>common-ligatures</string>
                    <string>condensed</string>
                    <string>contain</string>
                    <string>content</string>
                    <string>content-box</string>
                    <string>contents</string>
                    <string>context-menu</string>
                    <string>contextual</string>
                    <string>copy</string>
                    <string>cover</string>
                    <string>crisp-edges</string>
                    <string>crosshair</string>
                    <string>currentcolor</string>
                    <string>cursive</string>
                    <string>dark</string>
                    <string>darken</string>
                    <string>dashed</string>
                    <string>default</string>
                    <string>default-button</string>
                    <string>dense</string>
                    <string>destination-atop</string>
                    <string>destination-in</string>
                    <string>destination-out</string>
                    <string>destination-over</string>
                    <string>diagonal-fractions</string>
                    <string>difference</string>
                    <string>digits</string>
                    <string>disabled</string>
                    <string>discretionary-ligatures</string>
                    <string>display-p3</string>
                    <string>dot</string>
                    <string>dotted</string>
                    <string>double</string>
                    <string>double-circle</string>
                    <string>drag</string>
                    <string>dualbutton</string>
                    <string>e-resize</string>
                    <string>each-line</string>
                    <string>ease</string>
                    <string>ease-in</string>
                    <string>ease-in-out</string>
                    <string>ease-out</string>
                    <string>economy</string>
                    <string>element</string>
                    <string>ellipsis</string>
                    <string>embed</string>
                    <string>emoji</string>
                    <string>enabled</string>
                    <string>end</string>
                    <string>ew-resize</string>
                    <string>exact</string>
                    <string>exclude</string>
                    <string>exclusion</string>
                    <string>expanded</string>
                    <string>extra-condensed</string>
                    <string>extra-expanded</string>
                    <string>false</string>
                    <string>fang-song</string>
                    <string>fantasy</string>
                    <string>fill</string>
                    <string>fill-available</string>
                    <string>fill-box</string>
                    <string>fill-opacity</string>
                    <string>filled</string>
                    <string>first</string>
                    <string>fit-content</string>
                    <string>fixed</string>
                    <string>flat</string>
                    <string>flex</string>
                    <string>flex-end</string>
                    <string>flex-start</string>
                    <string>flip</string>
                    <string>flow</string>
                    <string>flow-root</string>
                    <string>force-end</string>
                    <string>forwards</string>
                    <string>from-font</string>
                    <string>from-image</string>
                    <string>full-size-kana</string>
                    <string>full-width</string>
                    <string>geometricPrecision</string>
                    <string>grab</string>
                    <string>grabbing</string>
                    <string>grammar-error</string>
                    <string>grid</string>
                    <string>grippers</string>
                    <string>groove</string>
                    <string>groupbox</string>
                    <string>hanging</string>
                    <string>hard-light</string>
                    <string>help</string>
                    <string>hidden</string>
                    <string>hide</string>
                    <string>historical-forms</string>
                    <string>historical-ligatures</string>
                    <string>horizontal</string>
                    <string>horizontal-tb</string>
                    <string>hue</string>
                    <string>icon</string>
                    <string>ideograph-alpha</string>
                    <string>ideograph-numeric</string>
                    <string>ideograph-parenthesis</string>
                    <string>ideograph-space</string>
                    <string>ignore</string>
                    <string>infinite</string>
                    <string>inherit</string>
                    <string>initial</string>
                    <string>inline</string>
                    <string>inline-axis</string>
                    <string>inline-block</string>
                    <string>inline-end</string>
                    <string>inline-flex</string>
                    <string>inline-grid</string>
                    <string>inline-list-item</string>
                    <string>inline-start</string>
                    <string>inline-table</string>
                    <string>inner-spin-button</string>
                    <string>inset</string>
                    <string>inside</string>
                    <string>inter-character</string>
                    <string>inter-word</string>
                    <string>intersect</string>
                    <string>isolate</string>
                    <string>isolate-override</string>
                    <string>italic</string>
                    <string>jis04</string>
                    <string>jis78</string>
                    <string>jis83</string>
                    <string>jis90</string>
                    <string>justify</string>
                    <string>keep-all</string>
                    <string>large</string>
                    <string>larger</string>
                    <string>last</string>
                    <string>layout</string>
                    <string>left</string>
                    <string>legacy</string>
                    <string>light</string>
                    <string>lighten</string>
                    <string>lighter</string>
                    <string>line-through</string>
                    <string>linear</string>
                    <string>lining-nums</string>
                    <string>list-item</string>
                    <string>listbox</string>
                    <string>listitem</string>
                    <string>local</string>
                    <string>loose</string>
                    <string>lowercase</string>
                    <string>lr</string>
                    <string>ltr</string>
                    <string>luminance</string>
                    <string>luminosity</string>
                    <string>mandatory</string>
                    <string>manipulation</string>
                    <string>manual</string>
                    <string>margin-box</string>
                    <string>markers</string>
                    <string>match-parent</string>
                    <string>match-source</string>
                    <string>math</string>
                    <string>max-content</string>
                    <string>maximum</string>
                    <string>media-controls-background</string>
                    <string>media-controls-fullscreen-background</string>
                    <string>media-current-time-display</string>
                    <string>media-enter-fullscreen-button</string>
                    <string>media-exit-fullscreen-button</string>
                    <string>media-fullscreen-button</string>
                    <string>media-mute-button</string>
                    <string>media-overlay-play-button</string>
                    <string>media-play-button</string>
                    <string>media-seek-back-button</string>
                    <string>media-seek-forward-button</string>
                    <string>media-slider</string>
                    <string>media-sliderthumb</string>
                    <string>media-time-remaining-display</string>
                    <string>media-toggle-closed-captions-button</string>
                    <string>media-volume-slider</string>
                    <string>media-volume-slider-container</string>
                    <string>media-volume-sliderthumb</string>
                    <string>medium</string>
                    <string>menu</string>
                    <string>menuarrow</string>
                    <string>menubar</string>
                    <string>menucheckbox</string>
                    <string>menuimage</string>
                    <string>menuitem</string>
                    <string>menuitemtext</string>
                    <string>menulist</string>
                    <string>menulist-button</string>
                    <string>menulist-text</string>
                    <string>menulist-textfield</string>
                    <string>menupopup</string>
                    <string>menuradio</string>
                    <string>menuseparator</string>
                    <string>message-box</string>
                    <string>meter</string>
                    <string>meterbar</string>
                    <string>meterchunk</string>
                    <string>middle</string>
                    <string>min-content</string>
                    <string>mixed</string>
                    <string>monospace</string>
                    <string>move</string>
                    <string>multiple</string>
                    <string>multiply</string>
                    <string>n-resize</string>
                    <string>ne-resize</string>
                    <string>nesw-resize</string>
                    <string>no-clip</string>
                    <string>no-close-quote</string>
                    <string>no-common-ligatures</string>
                    <string>no-contextual</string>
                    <string>no-discretionary-ligatures</string>
                    <string>no-drag</string>
                    <string>no-drop</string>
                    <string>no-historical-ligatures</string>
                    <string>no-limit</string>
                    <string>no-open-quote</string>
                    <string>no-repeat</string>
                    <string>none</string>
                    <string>normal</string>
                    <string>not-allowed</string>
                    <string>nowrap</string>
                    <string>ns-resize</string>
                    <string>nw-resize</string>
                    <string>nwse-resize</string>
                    <string>oblique</string>
                    <string>off</string>
                    <string>oldstyle-nums</string>
                    <string>on</string>
                    <string>open</string>
                    <string>open-quote</string>
                    <string>optimizeLegibility</string>
                    <string>optimizeSpeed</string>
                    <string>ordinal</string>
                    <string>outset</string>
                    <string>outside</string>
                    <string>over</string>
                    <string>overlay</string>
                    <string>overline</string>
                    <string>padding</string>
                    <string>padding-box</string>
                    <string>page</string>
                    <string>painted</string>
                    <string>pan-down</string>
                    <string>pan-left</string>
                    <string>pan-right</string>
                    <string>pan-up</string>
                    <string>pan-x</string>
                    <string>pan-y</string>
                    <string>paused</string>
                    <string>petite-caps</string>
                    <string>pinch-zoom</string>
                    <string>pixelated</string>
                    <string>plaintext</string>
                    <string>pointer</string>
                    <string>pre</string>
                    <string>pre-line</string>
                    <string>pre-wrap</string>
                    <string>preserve-3d</string>
                    <string>progress</string>
                    <string>progress-bar</string>
                    <string>progress-bar-value</string>
                    <string>progressbar</string>
                    <string>progressbar-vertical</string>
                    <string>progresschunk</string>
                    <string>progresschunk-vertical</string>
                    <string>proportional-nums</string>
                    <string>proportional-width</string>
                    <string>proximity</string>
                    <string>push-button</string>
                    <string>radio</string>
                    <string>radio-container</string>
                    <string>radio-label</string>
                    <string>radiomenuitem</string>
                    <string>railed</string>
                    <string>range</string>
                    <string>range-thumb</string>
                    <string>read-only</string>
                    <string>read-write</string>
                    <string>read-write-plaintext-only</string>
                    <string>recto</string>
                    <string>region</string>
                    <string>relative</string>
                    <string>repeat</string>
                    <string>repeat-x</string>
                    <string>repeat-y</string>
                    <string>reset</string>
                    <string>resizer</string>
                    <string>resizerpanel</string>
                    <string>reverse</string>
                    <string>revert</string>
                    <string>ridge</string>
                    <string>right</string>
                    <string>rl</string>
                    <string>round</string>
                    <string>row</string>
                    <string>row-resize</string>
                    <string>row-reverse</string>
                    <string>rtl</string>
                    <string>ruby</string>
                    <string>ruby-base</string>
                    <string>ruby-base-container</string>
                    <string>ruby-text</string>
                    <string>ruby-text-container</string>
                    <string>run-in</string>
                    <string>running</string>
                    <string>s-resize</string>
                    <string>safe</string>
                    <string>sans-serif</string>
                    <string>saturation</string>
                    <string>scale-down</string>
                    <string>scale-horizontal</string>
                    <string>scale-vertical</string>
                    <string>scalethumb-horizontal</string>
                    <string>scalethumb-vertical</string>
                    <string>scalethumbend</string>
                    <string>scalethumbstart</string>
                    <string>scalethumbtick</string>
                    <string>screen</string>
                    <string>scroll</string>
                    <string>scroll-position</string>
                    <string>scrollbar</string>
                    <string>scrollbarbutton-down</string>
                    <string>scrollbarbutton-left</string>
                    <string>scrollbarbutton-right</string>
                    <string>scrollbarbutton-up</string>
                    <string>scrollbarthumb-horizontal</string>
                    <string>scrollbarthumb-vertical</string>
                    <string>scrollbartrack-horizontal</string>
                    <string>scrollbartrack-vertical</string>
                    <string>se-resize</string>
                    <string>searchfield</string>
                    <string>searchfield-cancel-button</string>
                    <string>searchfield-decoration</string>
                    <string>searchfield-results-button</string>
                    <string>searchfield-results-decoration</string>
                    <string>select-after</string>
                    <string>select-all</string>
                    <string>select-before</string>
                    <string>select-menu</string>
                    <string>select-same</string>
                    <string>self-end</string>
                    <string>self-start</string>
                    <string>semi-condensed</string>
                    <string>semi-expanded</string>
                    <string>separate</string>
                    <string>separator</string>
                    <string>serif</string>
                    <string>sesame</string>
                    <string>sheet</string>
                    <string>show</string>
                    <string>sideways</string>
                    <string>sideways-lr</string>
                    <string>sideways-rl</string>
                    <string>simplified</string>
                    <string>single</string>
                    <string>size</string>
                    <string>slashed-zero</string>
                    <string>slice</string>
                    <string>slider-horizontal</string>
                    <string>slider-vertical</string>
                    <string>sliderthumb-horizontal</string>
                    <string>sliderthumb-vertical</string>
                    <string>small</string>
                    <string>small-caps</string>
                    <string>small-caption</string>
                    <string>smaller</string>
                    <string>smooth</string>
                    <string>soft-light</string>
                    <string>solid</string>
                    <string>source-atop</string>
                    <string>source-in</string>
                    <string>source-out</string>
                    <string>source-over</string>
                    <string>space</string>
                    <string>space-around</string>
                    <string>space-between</string>
                    <string>space-evenly</string>
                    <string>span</string>
                    <string>spelling-error</string>
                    <string>spinner</string>
                    <string>spinner-downbutton</string>
                    <string>spinner-textfield</string>
                    <string>spinner-upbutton</string>
                    <string>splitter</string>
                    <string>square-button</string>
                    <string>srgb</string>
                    <string>stacked-fractions</string>
                    <string>start</string>
                    <string>static</string>
                    <string>status-bar</string>
                    <string>statusbar</string>
                    <string>statusbarpanel</string>
                    <string>step-end</string>
                    <string>step-start</string>
                    <string>sticky</string>
                    <string>stretch</string>
                    <string>stretch-to-fit</string>
                    <string>strict</string>
                    <string>stroke</string>
                    <string>stroke-box</string>
                    <string>stroke-opacity</string>
                    <string>style</string>
                    <string>sub</string>
                    <string>subgrid</string>
                    <string>subtract</string>
                    <string>super</string>
                    <string>sw-resize</string>
                    <string>system-ui</string>
                    <string>tab</string>
                    <string>tab-scroll-arrow-back</string>
                    <string>tab-scroll-arrow-forward</string>
                    <string>table</string>
                    <string>table-caption</string>
                    <string>table-cell</string>
                    <string>table-column</string>
                    <string>table-column-group</string>
                    <string>table-footer-group</string>
                    <string>table-header-group</string>
                    <string>table-row</string>
                    <string>table-row-group</string>
                    <string>tabpanel</string>
                    <string>tabpanels</string>
                    <string>tabular-nums</string>
                    <string>tb</string>
                    <string>text</string>
                    <string>text-bottom</string>
                    <string>text-top</string>
                    <string>textarea</string>
                    <string>textfield</string>
                    <string>textfield-multiline</string>
                    <string>thick</string>
                    <string>thin</string>
                    <string>titling-caps</string>
                    <string>toolbar</string>
                    <string>toolbarbutton</string>
                    <string>toolbarbutton-dropdown</string>
                    <string>toolbargripper</string>
                    <string>toolbox</string>
                    <string>tooltip</string>
                    <string>top</string>
                    <string>touch</string>
                    <string>traditional</string>
                    <string>treeheader</string>
                    <string>treeheadercell</string>
                    <string>treeheadersortarrow</string>
                    <string>treeitem</string>
                    <string>treeline</string>
                    <string>treetwisty</string>
                    <string>treetwistyopen</string>
                    <string>treeview</string>
                    <string>triangle</string>
                    <string>true</string>
                    <string>ui-serif</string>
                    <string>ui-sans-serif</string>
                    <string>ui-monospace</string>
                    <string>ui-rounded</string>
                    <string>ultra-condensed</string>
                    <string>ultra-expanded</string>
                    <string>under</string>
                    <string>underline</string>
                    <string>unicase</string>
                    <string>unsafe</string>
                    <string>unset</string>
                    <string>uppercase</string>
                    <string>upright</string>
                    <string>verso</string>
                    <string>vertical</string>
                    <string>vertical-lr</string>
                    <string>vertical-rl</string>
                    <string>vertical-text</string>
                    <string>vertical-to-horizontal</string>
                    <string>view-box</string>
                    <string>visible</string>
                    <string>visibleFill</string>
                    <string>visiblePainted</string>
                    <string>visibleStroke</string>
                    <string>w-resize</string>
                    <string>wait</string>
                    <string>wavy</string>
                    <string>weight</string>
                    <string>wrap</string>
                    <string>wrap-reverse</string>
                    <string>write-only</string>
                    <string>x</string>
                    <string>x-large</string>
                    <string>x-small</string>
                    <string>xor</string>
                    <string>xx-large</string>
                    <string>xx-small</string>
                    <string>xxx-large</string>
                    <string>y</string>
                    <string>z</string>
                    <string>zoom</string>
                    <string>zoom-in</string>
                    <string>zoom-out</string>
                </strings>
            </scope>
            
            <scope name="postcss.style.value.function">
                <starts-with>
                    <expression>\b([a-zA-Z-][a-zA-ZÀ-ÖØ-öø-ÿŸřŘšŠžŽ0-9-_]*)(\()</expression>
                    <capture number="1" name="postcss.style.value.function.identifier.name" />
                    <capture number="2" name="postcss.style.value.function.bracket" />
                </starts-with>
                <ends-with>
                    <expression>(\))</expression>
                    <capture number="1" name="postcss.style.value.function.bracket" />
                </ends-with>
                <subscopes>
                    <include syntax="self" collection="values" />
                </subscopes>
            </scope>
            <!-- <scope name="postcss.style.value.string.bare">
                <starts-with>
                    <expression>\b([a-zA-Z][a-zA-ZÀ-ÖØ-öø-ÿŸřŘšŠžŽ0-9-_]*)</expression>
                </starts-with>
                <ends-with>
                    <expression>(?:(?&lt;=\\)[^A-Za-z0-9-])|(?:\w+)|$</expression>
                </ends-with>
            </scope> -->
            <scope name="postcss.style.operator">
                <expression>(-|\+|\*|\/|%)</expression>
            </scope>
        </collection>
        
        <!-- Variables -->
        <collection name="variable-definitions">
            <scope name="postcss.style.variable-definition">
                <symbol type="variable" scope="local" />
                <starts-with>
                    <expression>(\$[a-zA-ZÀ-ÖØ-öø-ÿŸřŘšŠžŽ0-9-_]+)\s*(:)</expression>
                    <capture number="1" name="postcss.style.variable-definition.identifier.variable.name" />
                    <capture number="2" name="postcss.style.variable-definition.separator" />
                </starts-with>
                <ends-with>
                    <expression>$</expression>
                </ends-with>
                <subscopes>
                    <include syntax="self" collection="comments" />
                    <scope name="postcss.style.variable-definition.value">
                        <starts-with>
                            <expression>(?&lt;=:)</expression>
                        </starts-with>
                        <ends-with>
                            <expression>$</expression>
                        </ends-with>
                        <subscopes>
                            <include syntax="self" collection="lists" />
                            <include syntax="self" collection="values" />
                        </subscopes>
                    </scope>
                </subscopes>
            </scope>
        </collection>
        
        <!-- Lists & Maps -->
        <collection name="lists">
            <scope name="postcss.style.list">
                <starts-with>
                    <expression>\(</expression>
                    <capture number="0" name="postcss.style.bracket" />
                </starts-with>
                <ends-with>
                    <expression>\)</expression>
                    <capture number="0" name="postcss.style.bracket" />
                </ends-with>
                <subscopes>
                    <cut-off>
                        <expression>(?=;|\})|$</expression>
                    </cut-off>
                    <scope name="postcss.style.map.key.unquoted">
                        <starts-with>
                            <expression>\b([a-zA-Z-_][a-zA-ZÀ-ÖØ-öø-ÿŸřŘšŠžŽ0-9-_]*)\s*(:)</expression>
                            <capture number="1" name="postcss.style.identifier.key.name" />
                            <capture number="2" name="postcss.style.separator" />
                        </starts-with>
                        <ends-with>
                            <expression>,|(?=\))</expression>
                        </ends-with>
                        <subscopes>
                            <cut-off>
                                <expression>(?=\})</expression>
                            </cut-off>
                            <include syntax="self" collection="comments" />
                            <scope name="postcss.style.map.value">
                                <starts-with>
                                    <expression>(?&lt;=:)</expression>
                                </starts-with>
                                <ends-with>
                                    <expression>(?=,|;|\}|\))|$</expression>
                                </ends-with>
                                <subscopes>
                                    <include syntax="self" collection="values" />
                                </subscopes>
                            </scope>
                        </subscopes>
                    </scope>
                    <scope name="postcss.style.map.key.double-quoted">
                        <starts-with>
                            <expression>&quot;([^\\&quot;]|\\.)*(?:(&quot;\s*(:))|$)</expression>
                            <capture number="2" name="postcss.style.separator" />
                        </starts-with>
                        <ends-with>
                            <expression>,|(?=\))</expression>
                        </ends-with>
                        <subscopes>
                            <cut-off>
                                <expression>(?=\})</expression>
                            </cut-off>
                            <include syntax="self" collection="comments" />
                            <scope name="postcss.style.map.value">
                                <starts-with>
                                    <expression>(?&lt;=:)</expression>
                                </starts-with>
                                <ends-with>
                                    <expression>(?=,|;|\}|\))|$</expression>
                                </ends-with>
                                <subscopes>
                                    <include syntax="self" collection="values" />
                                </subscopes>
                            </scope>
                        </subscopes>
                    </scope>
                    <scope name="postcss.style.map.key.single-quoted">
                        <starts-with>
                            <expression>&quot;([^\\&apos;]|\\.)*(?:(&apos;\s*(:))|$)</expression>
                            <capture number="2" name="postcss.style.separator" />
                        </starts-with>
                        <ends-with>
                            <expression>,|(?=\))</expression>
                        </ends-with>
                        <subscopes>
                            <cut-off>
                                <expression>(?=\})</expression>
                            </cut-off>
                            <include syntax="self" collection="comments" />
                            <scope name="postcss.style.map.value">
                                <starts-with>
                                    <expression>(?&lt;=:)</expression>
                                </starts-with>
                                <ends-with>
                                    <expression>(?=,|;|\}|\))|$</expression>
                                </ends-with>
                                <subscopes>
                                    <include syntax="self" collection="values" />
                                </subscopes>
                            </scope>
                        </subscopes>
                    </scope>
                    
                    <include syntax="self" collection="values" />
                </subscopes>
            </scope>
        </collection>
        
        <!-- Attributes -->
        <collection name="attributes">
            <scope name="postcss.style.attribute">
                <starts-with>
                    <expression>(?&lt;!\$)([a-zA-Z-_][a-zA-ZÀ-ÖØ-öø-ÿŸřŘšŠžŽ0-9-_]*)\s*(:)</expression>
                    <capture number="1" name="postcss.style.attribute.name" />
                    <capture number="2" name="postcss.style.attribute.separator" />
                </starts-with>
                <ends-with>
                    <expression>;|$</expression>
                </ends-with>
                <subscopes>
                    <include syntax="self" collection="comments" />
                    <scope name="postcss.style.attribute.value">
                        <starts-with>
                            <expression>(?&lt;=:)</expression>
                        </starts-with>
                        <ends-with>
                            <expression>(?=;)|$</expression>
                        </ends-with>
                        <subscopes>
                            <include syntax="self" collection="values" />
                        </subscopes>
                    </scope>
                </subscopes>
            </scope>
        </collection>
    </collections>
</syntax>
